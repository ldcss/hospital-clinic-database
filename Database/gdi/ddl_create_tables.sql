-- 1.
CREATE TABLE CLINICA (
  ID INT GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
  RAZAO_SOCIAL VARCHAR (100),
  CAPACIDADE INT NOT NULL,
  CEP VARCHAR(10) NOT NULL,
  BAIRRO VARCHAR(60),
  CIDADE VARCHAR(60),
  RUA VARCHAR(60),
  COMPLEMENTO VARCHAR(80),

  CONSTRAINT pk_clinica PRIMARY KEY (ID)
);

-- a.
CREATE TABLE FONE_CLINICA (
  ID INT NOT NULL,
  FONE VARCHAR(10) NOT NULL,

  CONSTRAINT pk_fone_clinica PRIMARY KEY (ID, FONE),
  CONSTRAINT fk_fone_clinica FOREIGN KEY (ID) REFERENCES CLINICA(ID)
);

-- 2.
CREATE TABLE FUNCIONARIO (
  CPF VARCHAR(15) NOT NULL,
  MATRICULA INT NOT NULL,
  ID_CLINICA INT NOT NULL,
  NOME VARCHAR(80) NOT NULL,
  NASCIMENTO DATE NOT NULL,
  SEXO VARCHAR(10),
  CEP VARCHAR(10) NOT NULL,
  BAIRRO VARCHAR(60),
  CIDADE VARCHAR(60),
  RUA VARCHAR(60),
  COMPLEMENTO VARCHAR(80),

  CONSTRAINT pk_funcionario PRIMARY KEY (CPF),
  CONSTRAINT fk_func_clinica FOREIGN KEY (ID_CLINICA) REFERENCES CLINICA(ID)
);

-- a.
CREATE TABLE FONE_FUNCIONARIO (
  CPF VARCHAR(15) NOT NULL,
  FONE VARCHAR(10) NOT NULL,

  CONSTRAINT pk_fone_funcionario PRIMARY KEY (FONE, CPF),
  CONSTRAINT fk_fone_funcionario FOREIGN KEY (CPF) REFERENCES FUNCIONARIO(CPF)
);

-- b.
CREATE TABLE EMAIL_FUNCIONARIO (
  CPF VARCHAR(15) NOT NULL,
  EMAIL VARCHAR(100) NOT NULL,

  CONSTRAINT pk_email_funcionario PRIMARY KEY (CPF, EMAIL),
  CONSTRAINT fk_email_funcionario FOREIGN KEY (CPF) REFERENCES FUNCIONARIO(CPF)
);

-- 3.
CREATE TABLE PACIENTE (
  CPF VARCHAR(15) NOT NULL,
  ID INT NOT NULL,
  NOME VARCHAR(80) NOT NULL,
  NASCIMENTO DATE NOT NULL,
  SEXO VARCHAR(10),
  CEP VARCHAR(10) NOT NULL,
  BAIRRO VARCHAR(60),
  CIDADE VARCHAR(60),
  RUA VARCHAR(60),
  COMPLEMENTO VARCHAR(80),

  CONSTRAINT pk_paciente PRIMARY KEY (CPF)
);

-- a.
CREATE TABLE FONE_PACIENTE (
  CPF VARCHAR(15) NOT NULL,
  FONE VARCHAR(10) NOT NULL,

  CONSTRAINT pk_fone_paciente PRIMARY KEY (FONE, CPF),
  CONSTRAINT fk_fone_paciente FOREIGN KEY (CPF) REFERENCES PACIENTE(CPF)
);

-- b.
CREATE TABLE EMAIL_PACIENTE (
  CPF VARCHAR(15) NOT NULL,
  EMAIL VARCHAR(100) NOT NULL,

  CONSTRAINT pk_email_paciente PRIMARY KEY (CPF, EMAIL),
  CONSTRAINT fk_email_paciente FOREIGN KEY (CPF) REFERENCES PACIENTE(CPF)
);

-- 4.
CREATE TABLE SETOR (
  DESCRICAO VARCHAR(15) NOT NULL,

  CONSTRAINT pk_setor PRIMARY KEY (DESCRICAO)
);

-- 5.
CREATE TABLE RECEPCIONISTA (
  CPF VARCHAR(15) NOT NULL,
  DESCRICAO VARCHAR(15) UNIQUE NOT NULL,

  CONSTRAINT pk_recepcionista PRIMARY KEY (CPF),
  CONSTRAINT fk_recepcionista FOREIGN KEY (CPF) REFERENCES FUNCIONARIO(CPF)
);

-- 6.
CREATE TABLE MEDICOS (
  CPF VARCHAR(15) NOT NULL,
  SUPERVISOR VARCHAR(15),
  CRM INT NOT NULL,

  CONSTRAINT pk_medico PRIMARY KEY (CPF),
  CONSTRAINT fk_medico FOREIGN KEY (CPF) REFERENCES FUNCIONARIO(CPF),
  CONSTRAINT fk_chefia FOREIGN KEY (SUPERVISOR) REFERENCES MEDICOS(CPF)
);

-- 7.
CREATE TABLE AGENDAMENTO (
  COD INT GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
  CPF_PACIENTE VARCHAR(15) NOT NULL,
  CPF_RECEPCIONISTA VARCHAR(15) NOT NULL,
  CPF_MEDICO VARCHAR(15) NOT NULL,

  CONSTRAINT pk_agendamento PRIMARY KEY (COD),
  CONSTRAINT fk_cpf_paciente FOREIGN KEY (CPF_PACIENTE) REFERENCES PACIENTE(CPF),
  CONSTRAINT fk_cpf_recepcionista FOREIGN KEY (CPF_RECEPCIONISTA) REFERENCES RECEPCIONISTA(CPF),
  CONSTRAINT fk_cpf_medico FOREIGN KEY (CPF_MEDICO) REFERENCES MEDICOS(CPF)
);

-- 8.
CREATE TABLE EMPRESA_TERCEIRIZADA (
  CNPJ VARCHAR(20) NOT NULL,
  RAZAO_SOCIAL VARCHAR (100),
  FUNCAO VARCHAR (40),
  CONTATO VARCHAR (10),

  CONSTRAINT pk_empresa PRIMARY KEY (CNPJ)
);

-- 9.
CREATE TABLE CONTRATO (
  COD INT NOT NULL,
  DATA VARCHAR (15),
  VALOR INT,

  CONSTRAINT pk_contrato PRIMARY KEY (COD)
);

-- 10.
CREATE TABLE SERVICO (
  ID_CLINICA INT NOT NULL,
  COD INT NOT NULL,
  CNPJ VARCHAR(20) NOT NULL,

  CONSTRAINT pk_servico PRIMARY KEY (ID_CLINICA, COD, CNPJ),
  CONSTRAINT fk_id_clinica FOREIGN KEY (ID_CLINICA) REFERENCES CLINICA(ID),
  CONSTRAINT fk_cod_servico FOREIGN KEY (COD) REFERENCES CONTRATO(COD),
  CONSTRAINT fk_cnpj_servico FOREIGN KEY (CNPJ) REFERENCES EMPRESA_TERCEIRIZADA(CNPJ)
);

-- 11.
CREATE TABLE PAGA_FUNCIONARIO (
  ID_CLINICA INT NOT NULL,
  CPF VARCHAR (15) NOT NULL,
  DATA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  VALOR INT,

  CONSTRAINT pk_paga_funcionario PRIMARY KEY (ID_CLINICA, CPF),
  CONSTRAINT fk_id_paga_funcionario FOREIGN KEY (ID_CLINICA) REFERENCES CLINICA(ID),
  CONSTRAINT fk_cpf_paga_funcionario FOREIGN KEY (CPF) REFERENCES FUNCIONARIO(CPF)
);

-- 12.
CREATE TABLE BENEFICIO (
  COD INT GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
  ID_CLINICA INT NOT NULL,
  CPF VARCHAR(15) NOT NULL,

  CONSTRAINT pk_beneficio PRIMARY KEY (COD),
  CONSTRAINT fk_beneficio FOREIGN KEY (ID_CLINICA, CPF) REFERENCES PAGA_FUNCIONARIO(ID_CLINICA, CPF)
);

-- 13.
CREATE TABLE TIPO_BENEFICIO (
  COD_BENEFICIO INT NOT NULL,
  TIPO VARCHAR(40) NOT NULL,

  CONSTRAINT pk_tipo_beneficio PRIMARY KEY (COD_BENEFICIO, TIPO),
  CONSTRAINT fk_cod_tipo FOREIGN KEY (COD_BENEFICIO) REFERENCES BENEFICIO(COD)
);

-- 14.
CREATE TABLE FORMULARIO (
  COD INT NOT NULL,
  DATA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  TIPO VARCHAR(50),

  CONSTRAINT pk_formulario PRIMARY KEY (COD, DATA),
  CONSTRAINT fk_FORMULARIO FOREIGN KEY (COD) REFERENCES AGENDAMENTO(COD)
);